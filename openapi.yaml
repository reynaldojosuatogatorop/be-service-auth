openapi: 3.0.0
info:
  title: Open API for CMS Backend
  description: Open API for CMS Backend
  version: 1.0.0

servers:
  - url: http://localhost:8882
    description: "local development"

paths:
  /login:
    post:
      summary: User Login
      description: Log in to the application
      tags:
        - Authentication & Authorization
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RequestLogin'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSuccess'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorBadRequest'
        '404':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorNotFound'

  /auth:
    get:
      summary: Authenticate User with Bearer Token
      description: Authenticate user using a bearer token
      tags:
        - Authentication & Authorization
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Authentication successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSuccessAuth'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'
  /logout:
    post:
      summary: Logout
      description: Mengakhiri sesi pengguna dan logout.
      tags:
        - Authentication & Authorization
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Logout berhasil
          content:
            application/json:
              schema:
                type: string
                description: Respon sukses
                example: success
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorUnauthorized'

components:
  schemas:
    RequestLogin:
      type: object
      properties:
        email:
          type: string
          description: User's email address
        password:
          type: string
          description: User's password
      required:
        - email
        - password
    ResponseSuccess:
      type: object
      properties:
        user_id:
          type: string
          example: 1
        token:
          type: string
          example: "i1u29ijdbabd9qu82i1313axxjq29n"
        expired:
          type: string
          example: "2023-09-10 22:00"
    ErrorBadRequest:
      type: object
      example: Bad request
    ErrorUnauthorized:
      type: object
      example: Unauthorized request
    ErrorNotFound:
      type: object
      example: DATA NOT FOUND
    ResponseSuccessAuth:
      type: object
      properties:
        user_id:
          type: string
          example: 1
        email:
          type: string
          example: "admin@gmail.com"
        role:
          type: string
          example: "pusat"
        expired:
          type: string
          example: 2023-09-10 22:00
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer